-- Initialize the global notifications table if it doesn't already exist
_G.activeNotifications = _G.activeNotifications or {}

local NotificationModule = {}
local TweenService = game:GetService("TweenService")
local CoreGui = game:GetService("CoreGui")

function NotificationModule.Notify(Name, Msg, Duration, ThemeColor)
    local Noti = Instance.new("ScreenGui")
    local Main = Instance.new("Frame")
    local UICorner = Instance.new("UICorner")
    local Top = Instance.new("Frame")
    local UICorner_2 = Instance.new("UICorner")
    local Title = Instance.new("TextLabel")
    local TopBar = Instance.new("Frame")
    local Message = Instance.new("TextLabel")
    local ProgressBar = Instance.new("Frame")

    Noti.Name = "Noti"
    Noti.DisplayOrder = 10
    Noti.Parent = CoreGui

    Main.Name = "Main"
    Main.Parent = Noti
    Main.AnchorPoint = Vector2.new(1, 1)
    Main.BackgroundColor3 = Color3.fromRGB(21, 21, 21)
    Main.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Main.BorderSizePixel = 0
    Main.Position = UDim2.new(1, 170, 1, -20)
    Main.Size = UDim2.new(0, 169.5, 0, 90)

    UICorner.CornerRadius = UDim.new(0, 3)
    UICorner.Parent = Main

    Top.Name = "Top"
    Top.Parent = Main
    Top.BackgroundColor3 = ThemeColor
    Top.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Top.BorderSizePixel = 0
    Top.Size = UDim2.new(0, 169, 0, 19.5)

    UICorner_2.CornerRadius = UDim.new(0, 3)
    UICorner_2.Parent = Top

    Title.Name = "Title"
    Title.Parent = Top
    Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Title.BackgroundTransparency = 1.000
    Title.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Title.BorderSizePixel = 0
    Title.Position = UDim2.new(0.0207100585, 0, 0.102564104, 0)
    Title.Size = UDim2.new(0, 162, 0, 15.5)
    Title.ZIndex = 3
    Title.Font = Enum.Font.Gotham
    Title.Text = Name
    Title.TextColor3 = Color3.fromRGB(255, 255, 255)
    Title.TextSize = 12.5

    TopBar.Name = "TopBar"
    TopBar.Parent = Main
    TopBar.BackgroundColor3 = ThemeColor
    TopBar.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TopBar.BorderSizePixel = 0
    TopBar.Position = UDim2.new(0, 0, 0.157894731, 0)
    TopBar.Size = UDim2.new(0, 169, 0, 6)

    Message.Name = "Message"
    Message.Parent = Main
    Message.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Message.BackgroundTransparency = 1.000
    Message.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Message.BorderSizePixel = 0
    Message.Position = UDim2.new(0.0177601501, 0, 0.35, 0)
    Message.Size = UDim2.new(0, 162, 0, 40)
    Message.ZIndex = 3
    Message.Font = Enum.Font.Gotham
    Message.Text = Msg
    Message.TextColor3 = Color3.fromRGB(255, 255, 255)
    Message.TextSize = 11
    Message.TextWrapped = true
    Message.TextXAlignment = Enum.TextXAlignment.Center
    Message.TextYAlignment = Enum.TextYAlignment.Center

    ProgressBar.Name = "ProgressBar"
    ProgressBar.Parent = Main
    ProgressBar.BackgroundColor3 = ThemeColor
    ProgressBar.BorderSizePixel = 0
    ProgressBar.Position = UDim2.new(0, 0, 1, -3)
    ProgressBar.Size = UDim2.new(0, 0, 0, 3)

    -- Function to adjust notification positions
    local function adjustNotificationPositions()
        for i, activeNoti in ipairs(_G.activeNotifications) do
            local newYPos = UDim2.new(1, -20, 1, -20 - (Main.Size.Y.Offset + 10) * (i - 1))
            TweenService:Create(activeNoti, TweenInfo.new(0.2, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {
                Position = newYPos
            }):Play()
        end
    end

    -- Add the new notification to the list and adjust positions
    table.insert(_G.activeNotifications, Main)
    adjustNotificationPositions()

    -- Tween to show the notification
    local tweenIn = TweenService:Create(Main, TweenInfo.new(0.5, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {
        Position = UDim2.new(1, -20, 1, -20)
    })
    tweenIn:Play()
    tweenIn.Completed:Wait()

    -- Tween the progress bar over the duration
    local progressTween = TweenService:Create(ProgressBar, TweenInfo.new(Duration, Enum.EasingStyle.Linear, Enum.EasingDirection.Out), {
        Size = UDim2.new(1, 0, 0, 3)
    })
    progressTween:Play()

    task.wait(Duration)

    -- Tween to hide the notification
    local tweenOut = TweenService:Create(Main, TweenInfo.new(0.5, Enum.EasingStyle.Quint, Enum.EasingDirection.In), {
        Position = UDim2.new(1, 170, 1, -20)
    })
    tweenOut:Play()
    tweenOut.Completed:Wait()

    Noti:Destroy()

    -- Remove the notification from the global list
    for i, activeNoti in ipairs(_G.activeNotifications) do
        if activeNoti == Main then
            table.remove(_G.activeNotifications, i)
            break
        end
    end

    -- Adjust positions after removing the notification
    adjustNotificationPositions()
end

return NotificationModule
